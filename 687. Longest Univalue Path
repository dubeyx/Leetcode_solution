/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int len=0;
    public int longestUnivaluePath(TreeNode root) {
        
        help(root);
        
    return len;    
    }
    
    public void help(TreeNode root){
        
if(root==null) return ;
        
      
        
        
        int left=height(root.left,root);
            int right= height(root.right,root);
        len=Math.max(len,left+right);
        help(root.left);
        help(root.right);
        
        
        
        
        
        
    }    
    
    public int height(TreeNode root, TreeNode prev){
        
       if(root==null) return 0;
        if(root.val!=prev.val) return 0;
       int a= 1+height(root.left,root);
        int b=1+height(root.right,root);
        
        return Math.max(a,b);
        
        
    }
}
