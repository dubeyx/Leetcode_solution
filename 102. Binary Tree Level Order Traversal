/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>> l = new ArrayList();
        
        if(root==null) return l;
        Deque<TreeNode> d = new LinkedList();
        d.addLast(new TreeNode(-1200));
        TreeNode t = root;
        d.add(t);
        while(d.size()>0)
        {
            List<Integer> dummy = new ArrayList();
            
            while(d.peekLast().val!=-1200)
            {
                TreeNode w = d.removeLast();
                if(w.left!=null) d.addFirst(w.left);
                if(w.right!=null) d.addFirst(w.right);
                dummy.add(w.val);
                
                //pollLast
                
            }
            if(dummy.size()==0) break;
            d.removeLast();
            d.addFirst(new TreeNode(-1200));
            
            l.add(dummy);
            
            
        }
        
        
        
        
        
       return l; 
        
    }
}
