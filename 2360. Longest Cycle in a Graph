class Solution {
    public int longestCycle(int[] edges) {
        int ans=0;
        Map<Integer,Integer> mp= new HashMap<>();
        for(int i=0;i<edges.length;i++){
            if(edges[i]>=0) mp.put(i,edges[i]);
        }
        int[] vis= new int[edges.length];
        
        for(int i=0;i<vis.length;i++){
            
            if(vis[i]==1) continue;
            Map<Integer,Integer> m= new HashMap<>();
            int j=1;
            int ed=i;
            while(!m.containsKey(ed) && vis[ed]==0 && mp.containsKey(ed)){
                vis[i]=1;
                m.put(ed,j++);
                ed=mp.get(ed);
                
            }
          if(m.containsKey(ed))  ans=Math.max(ans,j-m.get(ed));
            
            
        }
        
        
        return ans==0?-1:ans;
    }
}
