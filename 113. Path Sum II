/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> ans=new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if(root==null) return ans;
        helper(root,targetSum,new ArrayList<>());
        return ans;   
    }
    
    public void helper(TreeNode root, int targetSum, List<Integer> li){
        
        
        
       if(root==null) return;
        
       if(root.left==null && root.right==null)
       {
           if(root.val==targetSum) {
              List<Integer> x= new ArrayList<>(li);
               x.add(root.val);
               ans.add(x);
               
           }
           return;
       }
        
        List<Integer> l = new ArrayList<>(li);
        l.add(root.val);
        helper(root.left,targetSum-root.val,l);
        helper(root.right,targetSum-root.val,l);
        
        
        
        
        
    } 
}
